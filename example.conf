# This is an example configuration file for CoubDownloader
# To use a custom config, place a file called 'coub.conf' in the same location as the script

# Lines starting with '#' are treated as comments

# Change verbosity of the script
#   0 -> only errors and warnings
#   1 -> normal verbosity
VERBOSITY = 1

# How to treat overwrite prompts
#   prompt -> prompt the user
#   yes    -> always answer with yes
#   no     -> always answer with no
PROMPT = prompt

# Default download destination
PATH = .

# Keep individual video/audio streams
KEEP = False

# How often to loop the video
# Only has an effect, if the looped video is shorter than the audio
# Otherwise the max. length is limited by the audio duration
REPEAT = 1000

# Max. coub duration (FFmpeg syntax)
# Can be used in combination with repeat, in which case the shorter duration will be used
DUR = None

# Max no. of connections to use
# Raising this value can lead to shorter download times, but also increases the risk of Coub throttling or terminating your connections
# There's no benefit in higher values, if your connection is already fully utilized
CONNECT = 25

# How often to retry download when connection is lost
#  >0 -> retry the specified number of times
#   0 -> don't retry
#  <0 -> retry indefinitely
RETRIES = 5

# Limit how many links to parse during one run
#  >0 -> limit to the specified number
#   0 -> no limit
MAX_COUBS = 0

# What video/audio quality to download
#   0 -> worst quality
#  -1 -> best quality
# Everything else can lead to undefined behavior
V_QUALITY = -1
A_QUALITY = -1

# Limits for the list of video streams
#   V_MAX: limit what counts as best stream
#   V_MIN: limit what counts as worst stream
# Supported values:
#   med    ( ~640px width)
#   high   (~1280px width)
#   higher (~1600px width)
V_MAX = higher
V_MIN = med

# How much to prefer AAC audio
#   0 -> never download AAC audio
#   1 -> rank it between low and high quality MP3
#   2 -> prefer AAC, use MP3 fallback
#   3 -> either AAC or no audio
AAC = 1

# Download shared video+audio version instead of merging separate streams
SHARE = False

# How to treat recoubs during channel downloads
#   RECOUBS = False     -> Only Original
#   RECOUBS = True      -> Original + Recoubs
#   ONLY_RECOUBS = True -> Only Recoubs
# RECOUBS mustn't be False, when ONLY_RECOUBS is True
RECOUBS = True
ONLY_RECOUBS = False

# Preview a downloaded coub with the given command
# Keyboard shortcuts may not work for CLI audio players
PREVIEW = None

# Only download video/audio stream
# A_ONLY and V_ONLY are mutually exclusive
A_ONLY = False
V_ONLY = False

# Write parsed links to the specified file and exit (don't download coubs)
OUT_FILE = None

# Use an archive file to keep track of downloaded coubs
ARCHIVE_PATH = None

# Container to merge separate video/audio streams into
# Must support AVC video and AAC/MP3 audio (e.g. mkv or mp4)
# See: https://en.wikipedia.org/wiki/Comparison_of_video_container_formats
MERGE_EXT = mkv

# Output name formatting
# Supports the following special keywords:
#   %id%        - coub ID (identifier in the URL)
#   %title%     - coub title
#   %creation%  - creation date/time
#   %community% - coub community
#   %channel%   - channel title
#   %tags%      - all tags (separated by TAG_SEP, see below)
# All other strings are interpreted literally.
#
# Setting a custom value increases skip duration for existing coubs
# Usage of an archive file is recommended
OUT_FORMAT = %id%

# What character o string to use to separate tags in the output filename
TAG_SEP = _

# How to write parsed links to a file (see OUT_FILE)
#   w -> overwrite
#   a -> append
WRITE_METHOD = w
